<%
# https://github.com/algolia/docsearch-configs/blob/master/configs/futureverse.json
options(useFancyQuotes = FALSE)

pkgs <- Sys.getenv("PACKAGES", "BiocParallel.FutureParam doFuture future future.apply future.batchtools future.callr future.tests globals listenv marshal parallelly progressr")
pkgs <- unlist(strsplit(pkgs, split = "[,[:space:]]", fixed = FALSE))
pkgs <- gsub("(^[[:space:]]+|[[:space:]]+$)", "", pkgs)
pkgs <- sort(unique(pkgs))

list_pkgs <- function(pkgs, prefix, fmtstr = "%s", collapse = ",\n") {
  if (is.numeric(prefix)) {
    prefix <- paste(rep(" ", times = prefix), collapse = "")
  }
  pkgs <- sprintf(fmtstr, pkgs)
  pkgs <- sprintf("%s%s", prefix, dQuote(pkgs, q = FALSE))
  if (!is.null(collapse)) pkgs <- paste(pkgs, collapse = collapse)
  pkgs
}
%>
{
  "index_name": "futureverse",
  "start_urls": [
    {
      "url": "https://(?P<project>.*?).futureverse.org/index.html",
      "selectors_key": "homepage",
      "variables": {
        "project": [
<%= list_pkgs(pkgs, prefix = "          ") %>
        ]
      }
    },
    {
      "url": "https://(?P<project>.*?).futureverse.org/reference",
      "selectors_key": "reference",
      "variables": {
        "project": [
<%= list_pkgs(pkgs, prefix = "          ") %>
        ]
      }
    },
    {
      "url": "https://(?P<project>.*?).futureverse.org/articles",
      "selectors_key": "articles",
      "variables": {
        "project": [
<%= list_pkgs(pkgs, prefix = "          ") %>
        ]
      }
    }
  ],
  "stop_urls": [
    "/reference/$",
    "/reference/index.html",
    "/articles/$",
    "/articles/index.html"
  ],
  "sitemap_urls": [
<%= list_pkgs(pkgs, fmtstr = "https://%s.futureverse.org/sitemap.xml", prefix = "    ") %>
  ],
  "selectors": {
    "homepage": {
      "lvl0": {
        "selector": ".contents h1",
        "default_value": "pkgdown Home page"
      },
      "lvl1": {
        "selector": ".contents h2"
      },
      "lvl2": {
        "selector": ".contents h3",
        "default_value": "Context"
      },
      "lvl3": ".ref-arguments td, .ref-description",
      "text": ".contents p, .contents li, .contents .pre"
    },
    "reference": {
      "lvl0": {
        "selector": ".contents h1"
      },
      "lvl1": {
        "selector": ".contents .name",
        "default_value": "Argument"
      },
      "lvl2": {
        "selector": ".ref-arguments th",
        "default_value": "Description"
      },
      "lvl3": ".ref-arguments td, .ref-description",
      "text": ".contents p, .contents li"
    },
    "articles": {
      "lvl0": {
        "selector": ".contents h1"
      },
      "lvl1": {
        "selector": ".contents .name"
      },
      "lvl2": {
        "selector": ".contents h2, .contents h3",
        "default_value": "Context"
      },
      "text": ".contents p, .contents li"
    },
    "default": {
      "lvl1": ".contents h2",
      "lvl2": ".contents h3, .contents th",
      "lvl3": ".contents h4",
      "lvl4": ".contents h5",
      "text": ".contents p, .contents li, .usage, .template-article .contents .pre"
    }
  },
  "selectors_exclude": [".dont-index"],
  "min_indexed_level": 2,
  "custom_settings": {
    "separatorsToIndex": "_",
    "attributesForFaceting": ["project"],
    "attributesToRetrieve": [
      "hierarchy",
      "content",
      "anchor",
      "url",
      "url_without_anchor"
    ]
  },
  "conversation_id": ["1470006595"],
  "nb_hits": 3329
}
