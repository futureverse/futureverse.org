<%
# https://github.com/algolia/docsearch-configs/blob/master/configs/futureverse.json
options(useFancyQuotes = FALSE)

pkgs <- Sys.getenv("PACKAGES", "BiocParallel.FutureParam doFuture future future.apply future.batchtools future.callr future.tests globals listenv parallelly progressr")
pkgs <- unlist(strsplit(pkgs, split = "[,[:space:]]", fixed = FALSE))
pkgs <- gsub("(^[[:space:]]+|[[:space:]]+$)", "", pkgs)
pkgs <- sort(unique(pkgs))
%>
{
  "index_name": "futureverse",
  "start_urls": [
<% for (pkg in pkgs) { %>  
    {
      "url": "https://<%= pkg %>.futureverse.org/index.html",
      "selectors_key": "homepage",
      "tags": [
        "<%= pkg %>",
        "homepage"
      ]
    },
    {
      "url": "https://<%= pkg %>.futureverse.org/reference",
      "selectors_key": "reference",
      "tags": [
        "<%= pkg %>",
        "reference"
      ]
    },
    {
      "url": "https://<%= pkg %>.futureverse.org/articles",
      "selectors_key": "articles",
      "tags": [
        "<%= pkg %>",
        "articles"
      ]
    }<%= if (pkg != pkgs[length(pkgs)]) "," %>
<% } %>
  ],
  "stop_urls": [
    "/reference/$",
    "/reference/index.html",
    "/articles/$",
    "/articles/index.html"
  ],
  "sitemap_urls": [
    <%= paste(dQuote(sprintf("https://%s.futureverse.org/sitemap.xml", pkgs)), collapse = ",\n    ") %>
  ],
  "selectors": {
    "homepage": {
      "lvl0": {
        "selector": ".contents h1",
        "default_value": "pkgdown Home page"
      },
      "lvl1": {
        "selector": ".contents h2"
      },
      "lvl2": {
        "selector": ".contents h3",
        "default_value": "Context"
      },
      "lvl3": ".ref-arguments td, .ref-description",
      "text": ".contents p, .contents li, .contents .pre"
    },
    "reference": {
      "lvl0": {
        "selector": ".contents h1"
      },
      "lvl1": {
        "selector": ".contents .name",
        "default_value": "Argument"
      },
      "lvl2": {
        "selector": ".ref-arguments th",
        "default_value": "Description"
      },
      "lvl3": ".ref-arguments td, .ref-description",
      "text": ".contents p, .contents li"
    },
    "articles": {
      "lvl0": {
        "selector": ".contents h1"
      },
      "lvl1": {
        "selector": ".contents .name"
      },
      "lvl2": {
        "selector": ".contents h2, .contents h3",
        "default_value": "Context"
      },
      "text": ".contents p, .contents li"
    },
    "default": {
      "lvl1": ".contents h2",
      "lvl2": ".contents h3, .contents th",
      "lvl3": ".contents h4",
      "lvl4": ".contents h5",
      "text": ".contents p, .contents li, .usage, .template-article .contents .pre"
    }
  },
  "selectors_exclude": [
    ".dont-index"
    ],
  "min_indexed_level": 2,
  "custom_settings": {
    "separatorsToIndex": "_",
    "attributesForFaceting": [
      "tags"
    ],
    "attributesToRetrieve": [
      "hierarchy",
      "content",
      "anchor",
      "url",
      "url_without_anchor"
    ]
  },
  "conversation_id": [
    "1470006595"
  ],
  "nb_hits": 1341
}
